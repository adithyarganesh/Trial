/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BooksGUI.java
 *
 * Created on Aug 2, 2014, 8:53:12 AM
 */
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author Adithya
 */
public class BooksGUI extends javax.swing.JFrame {

    Connection con = null;
    Statement st = null;
    ResultSet rs = null;
    Cart c1 = new Cart();

    /** Creates new form BooksGUI */
    public BooksGUI() {
        initComponents();
        ConsolidatedSearchButton.setEnabled(false);
        SearchButton.setEnabled(false);
        AddToCartButton.setVisible(false);

        DefaultTableModel dtm = (DefaultTableModel) BooksTable.getModel();
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/project", "root", "");
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM  BOOKS");
            while (rs.next()) {
                String prdid = rs.getString("PRODUCTID"), bn = rs.getString("BOOKNAME"), pr = rs.getString("PRICE"), st = rs.getString("STOCK"), pub = rs.getString("PUBLISHER"), au = rs.getString("AUTHOR"), cat1 = rs.getString("CATEGORY1"), cat2 = rs.getString("CATEGORY2");
                dtm.addRow(new String[]{prdid, bn, au, cat1, cat2});
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            System.exit(0);
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BooksTable = new javax.swing.JTable();
        helpButton = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        category2TextField = new javax.swing.JTextField();
        category1TextField = new javax.swing.JTextField();
        authorTextField = new javax.swing.JTextField();
        publisherTextField = new javax.swing.JTextField();
        stockTextField = new javax.swing.JTextField();
        priceTextField = new javax.swing.JTextField();
        booknameTextField = new javax.swing.JTextField();
        prdidTextField = new javax.swing.JTextField();
        BackButton = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        AddToCartButton = new javax.swing.JButton();
        ConsolidatedSearchButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        RefreshButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 12));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Art_Bookstore_01_Art-Bookstore-Le-Royal-Monceau--Raffles-Paris-2-61.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 760, 160));

        BooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Book Name", "Author", "Category", "Sub Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BooksTable.setColumnSelectionAllowed(true);
        BooksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BooksTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BooksTable);
        BooksTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 550, 297));

        helpButton.setForeground(new java.awt.Color(51, 153, 255));
        helpButton.setText("help:");
        helpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpButtonMouseClicked(evt);
            }
        });
        jPanel1.add(helpButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 120, -1, -1));

        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("PRODUCT ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 340, -1, -1));

        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Book Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 370, -1, -1));

        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Price");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, -1, 20));

        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Stock");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 460, -1, -1));

        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Publisher");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 490, -1, -1));

        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("Author");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 430, -1, -1));

        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("Category-1");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 520, -1, -1));

        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Category-2");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 550, -1, -1));

        category2TextField.setEditable(false);
        jPanel1.add(category2TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 550, 139, -1));

        category1TextField.setEditable(false);
        jPanel1.add(category1TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, 139, -1));

        authorTextField.setEditable(false);
        jPanel1.add(authorTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 430, 139, -1));

        publisherTextField.setEditable(false);
        jPanel1.add(publisherTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 490, 139, -1));

        stockTextField.setEditable(false);
        jPanel1.add(stockTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 460, 139, -1));

        priceTextField.setEditable(false);
        jPanel1.add(priceTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 400, 139, -1));

        booknameTextField.setEditable(false);
        jPanel1.add(booknameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 370, 139, -1));

        prdidTextField.setEditable(false);
        jPanel1.add(prdidTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 340, 139, -1));

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jPanel1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 580, 40, -1));

        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("Quantity");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 580, -1, -1));

        AddToCartButton.setText("Add to cart");
        AddToCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToCartButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddToCartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 630, 124, 30));

        ConsolidatedSearchButton.setText("Display consolidated search");
        ConsolidatedSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsolidatedSearchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ConsolidatedSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 630, -1, 30));

        jLabel14.setFont(new java.awt.Font("Agency FB", 0, 48));
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("choose your books!");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 310, 80));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/banner-online.jpg"))); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 110));

        SearchButton.setText("Search");
        SearchButton.setBorderPainted(false);
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 630, 100, 30));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/xxzz.JPG"))); // NOI18N
        jLabel13.setText("jLabel13");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, 820, 110));

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });
        jPanel1.add(RefreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 630, -1, 30));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bbbbb.JPG"))); // NOI18N
        jLabel16.setText("jLabel12");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 670));

        jLabel15.setFont(new java.awt.Font("Agency FB", 0, 48));
        jLabel15.setForeground(java.awt.Color.white);
        jLabel15.setText("Choose your Books !");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, -1));

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        AddToCartButton.setVisible(true);
        ConsolidatedSearchButton.setEnabled(false);
        SearchButton.setEnabled(false);
        try {
            DefaultTableModel dtm1 = (DefaultTableModel) BooksTable.getModel();
            int i = BooksTable.getSelectedRow();
            int j = BooksTable.getSelectedColumn();
            String value = dtm1.getValueAt(i, j).toString();
            if (j == 0) {
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE PRODUCTID LIKE " + value;
                rs = st.executeQuery(SQL);
                if (rs.next()) {
                    prdidTextField.setText(rs.getString("PRODUCTID"));
                    booknameTextField.setText(rs.getString("BOOKNAME"));
                    priceTextField.setText(rs.getString("PRICE"));
                    stockTextField.setText(rs.getString("STOCK"));
                    publisherTextField.setText(rs.getString("PUBLISHER"));
                    authorTextField.setText(rs.getString("AUTHOR"));
                    category1TextField.setText(rs.getString("CATEGORY1"));
                    category2TextField.setText(rs.getString("CATEGORY2"));
                }
            } else if (j == 1) {
                String val;
                val = dtm1.getValueAt(i, 0).toString();
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE BOOKNAME LIKE '" + value + "'" + "AND PRODUCTID=" + val;
                rs = st.executeQuery(SQL);
                if (rs.next()) {
                    prdidTextField.setText(rs.getString("PRODUCTID"));
                    booknameTextField.setText(rs.getString("BOOKNAME"));
                    priceTextField.setText(rs.getString("PRICE"));
                    stockTextField.setText(rs.getString("STOCK"));
                    publisherTextField.setText(rs.getString("PUBLISHER"));
                    authorTextField.setText(rs.getString("AUTHOR"));
                    category1TextField.setText(rs.getString("CATEGORY1"));
                    category2TextField.setText(rs.getString("CATEGORY2"));
                }
            } else if (j == 2) {
                String val;
                val = dtm1.getValueAt(i, 0).toString();
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE AUTHOR LIKE '" + value + "'" + "AND PRODUCTID=" + val;
                rs = st.executeQuery(SQL);
                if (rs.next()) {
                    prdidTextField.setText(rs.getString("PRODUCTID"));
                    booknameTextField.setText(rs.getString("BOOKNAME"));
                    priceTextField.setText(rs.getString("PRICE"));
                    stockTextField.setText(rs.getString("STOCK"));
                    publisherTextField.setText(rs.getString("PUBLISHER"));
                    authorTextField.setText(rs.getString("AUTHOR"));
                    category1TextField.setText(rs.getString("CATEGORY1"));
                    category2TextField.setText(rs.getString("CATEGORY2"));
                }
            } else if (j == 3) {
                String val;
                val = dtm1.getValueAt(i, 0).toString();
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE CATEGORY1 LIKE '" + value + "'" + "AND PRODUCTID=" + val;
                rs = st.executeQuery(SQL);
                if (rs.next()) {
                    prdidTextField.setText(rs.getString("PRODUCTID"));
                    booknameTextField.setText(rs.getString("BOOKNAME"));
                    priceTextField.setText(rs.getString("PRICE"));
                    stockTextField.setText(rs.getString("STOCK"));
                    publisherTextField.setText(rs.getString("PUBLISHER"));
                    authorTextField.setText(rs.getString("AUTHOR"));
                    category1TextField.setText(rs.getString("CATEGORY1"));
                    category2TextField.setText(rs.getString("CATEGORY2"));
                }
            } else if (j == 4) {
                String val;
                val = dtm1.getValueAt(i, 0).toString();
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE CATEGORY2 LIKE '" + value + "'" + "AND PRODUCTID=" + val;
                rs = st.executeQuery(SQL);
                if (rs.next()) {
                    prdidTextField.setText(rs.getString("PRODUCTID"));
                    booknameTextField.setText(rs.getString("BOOKNAME"));
                    priceTextField.setText(rs.getString("PRICE"));
                    stockTextField.setText(rs.getString("STOCK"));
                    publisherTextField.setText(rs.getString("PUBLISHER"));
                    authorTextField.setText(rs.getString("AUTHOR"));
                    category1TextField.setText(rs.getString("CATEGORY1"));
                    category2TextField.setText(rs.getString("CATEGORY2"));
                }
            } else {
                JOptionPane.showMessageDialog(null, "NO RECORD FOUND");
            }
            rs.close();
        } catch (Exception e) {
            System.out.println("ERROR! " + e.getMessage());
            System.exit(0);
        }

    }//GEN-LAST:event_SearchButtonActionPerformed

    private void AddToCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToCartButtonActionPerformed
        // TODO add your handling code here:

        try {
            String prid = prdidTextField.getText(), prty = publisherTextField.getText(), bname = booknameTextField.getText(), price = priceTextField.getText(), ct1 = category1TextField.getText(), qnty = jSpinner1.getValue().toString();
            c1.setProductID(Integer.parseInt(prid));
            c1.setBrandName(bname);
            c1.setProductType(prty);
            c1.setPrice(Double.parseDouble(price));
            c1.setStock(Integer.parseInt(stockTextField.getText()));
            c1.setCategory1(ct1);
            c1.setCategory2(category2TextField.getText());
            c1.setAuthor(authorTextField.getText());
            c1.setQuantity(Integer.parseInt(jSpinner1.getValue().toString()));
            if (c1.getQuantity() <= 0) {
                JOptionPane.showMessageDialog(null, "PLEASE SET THE NUMBER OF ITEMS");
            } else {
                String sql = "INSERT INTO CART VALUES (" + prid + ",'" + bname + "','" + ct1 + "'," + price + "," + qnty + ")";
                if (JOptionPane.showConfirmDialog(null, "Are you sure you want to add to cart?") == JOptionPane.YES_OPTION) {
                    int n = st.executeUpdate(sql);
                    if (n > 0) {
                        JOptionPane.showMessageDialog(this, "Successfully added to Cart!" + "\n" + "Please check your cart.");
                    } else {
                        JOptionPane.showMessageDialog(null, "ERROR ADDING TO CART! ");
                    }
                    new CartGUI(c1).setVisible(true);
                    this.dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            System.exit(0);
        }

    }//GEN-LAST:event_AddToCartButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        new ShoppingGUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void ConsolidatedSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsolidatedSearchButtonActionPerformed
        // TODO add your handling code here:
        ConsolidatedSearchButton.setEnabled(false);
        SearchButton.setEnabled(false);
        DefaultTableModel dtm1 = (DefaultTableModel) BooksTable.getModel();

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/project", "root", "");
            st = con.createStatement();
            int i = BooksTable.getSelectedRow();
            int j = BooksTable.getSelectedColumn();
            String value = dtm1.getValueAt(i, j).toString();
            int rowcnt = dtm1.getRowCount();
            for (int k = 0; k < rowcnt; k++) {
                dtm1.removeRow(0);
            }
            if (j == 1) {
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE BOOKNAME LIKE '" + value + "'";

                rs = st.executeQuery(SQL);
                while (rs.next()) {
                    String prdid = rs.getString("PRODUCTID"), bn = rs.getString("BOOKNAME"), pr = rs.getString("PRICE"), st = rs.getString("STOCK"), pub = rs.getString("PUBLISHER"), au = rs.getString("AUTHOR"), cat1 = rs.getString("CATEGORY1"), cat2 = rs.getString("CATEGORY2");
                    dtm1.addRow(new String[]{prdid, bn, au, cat1, cat2});
                }

            } else if (j == 2) {
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE AUTHOR LIKE '" + value + "'";
                System.out.print(SQL);
                rs = st.executeQuery(SQL);
                while (rs.next()) {
                    String prdid = rs.getString("PRODUCTID"), bn = rs.getString("BOOKNAME"), pr = rs.getString("PRICE"), st = rs.getString("STOCK"), pub = rs.getString("PUBLISHER"), au = rs.getString("AUTHOR"), cat1 = rs.getString("CATEGORY1"), cat2 = rs.getString("CATEGORY2");
                    dtm1.addRow(new String[]{prdid, bn, au, cat1, cat2});
                }

            } else if (j == 3) {
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE CATEGORY1 LIKE '" + value + "'";
                System.out.print(SQL);
                rs = st.executeQuery(SQL);
                while (rs.next()) {
                    String prdid = rs.getString("PRODUCTID"), bn = rs.getString("BOOKNAME"), pr = rs.getString("PRICE"), st = rs.getString("STOCK"), pub = rs.getString("PUBLISHER"), au = rs.getString("AUTHOR"), cat1 = rs.getString("CATEGORY1"), cat2 = rs.getString("CATEGORY2");
                    dtm1.addRow(new String[]{prdid, bn, au, cat1, cat2});
                }

            } else if (j == 4) {
                String SQL = "SELECT * FROM BOOKS "
                        + " WHERE CATEGORY2 LIKE '" + value + "'";
                System.out.print(SQL);
                rs = st.executeQuery(SQL);
                while (rs.next()) {
                    String prdid = rs.getString("PRODUCTID"), bn = rs.getString("BOOKNAME"), pr = rs.getString("PRICE"), st = rs.getString("STOCK"), pub = rs.getString("PUBLISHER"), au = rs.getString("AUTHOR"), cat1 = rs.getString("CATEGORY1"), cat2 = rs.getString("CATEGORY2");
                    dtm1.addRow(new String[]{prdid, bn, au, cat1, cat2});
                }

            } else {
                JOptionPane.showMessageDialog(null, "NO RECORD FOUND");
            }

            rs.close();

        } catch (Exception e) {
            System.out.println("ERROR! " + e.getMessage());
            System.exit(0);
        }
    }//GEN-LAST:event_ConsolidatedSearchButtonActionPerformed

    private void BooksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BooksTableMouseClicked
        // TODO add your handling code here:
        ConsolidatedSearchButton.setEnabled(true);
        SearchButton.setEnabled(true);
    }//GEN-LAST:event_BooksTableMouseClicked

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
        ConsolidatedSearchButton.setEnabled(false);
        SearchButton.setEnabled(false);
        DefaultTableModel dtm = (DefaultTableModel) BooksTable.getModel();
        int rowcnt = dtm.getRowCount();
        for (int k = 0; k < rowcnt; k++) {
            dtm.removeRow(0);
        }
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/project", "root", "");
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM  BOOKS");
            while (rs.next()) {
                String prdid = rs.getString("PRODUCTID"), bn = rs.getString("BOOKNAME"), pr = rs.getString("PRICE"), st = rs.getString("STOCK"), pub = rs.getString("PUBLISHER"), au = rs.getString("AUTHOR"), cat1 = rs.getString("CATEGORY1"), cat2 = rs.getString("CATEGORY2");
                dtm.addRow(new String[]{prdid, bn, au, cat1, cat2});
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            System.exit(0);
        }


    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void helpButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpButtonMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Please choose the item you wish to “buy” from the displayed Table and click" + "\n"
                + " 'Search' button if you want to know the other details of the item chosen (clicked)." + "\n"
                + " 'Consolidated Search' button if you want us to display all the items with that particular field." + "\n"
                + " Once that’s done you can either place your item in your cart or you can choose another item from the table by clicking the “Refresh” button.");

    }//GEN-LAST:event_helpButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new BooksGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddToCartButton;
    private javax.swing.JButton BackButton;
    private javax.swing.JTable BooksTable;
    private javax.swing.JButton ConsolidatedSearchButton;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField authorTextField;
    private javax.swing.JTextField booknameTextField;
    private javax.swing.JTextField category1TextField;
    private javax.swing.JTextField category2TextField;
    private javax.swing.JLabel helpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField prdidTextField;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JTextField publisherTextField;
    private javax.swing.JTextField stockTextField;
    // End of variables declaration//GEN-END:variables
}
